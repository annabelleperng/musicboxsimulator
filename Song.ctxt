#BlueJ class context
comment0.params=tempo
comment0.target=Song(int)
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ Song.\n\ \n\ @param\ \ \ tempo\ \ \ the\ tempo\ to\ play\ the\ song\ at\n
comment1.params=
comment1.target=int\ getTempo()
comment1.text=\n\ Returns\ the\ tempo\ of\ the\ song.\n\ \n\ @return\ \ the\ tempo\ at\ which\ the\ song\ is\ played\ at.\ Tempos\ are\ usually\ between\n\ \ \ \ \ \ \ \ \ \ 30\ and\ 252.\ If\ the\ tempo\ has\ not\ been\ set\ by\ the\ user,\ the\ default\ \n\ \ \ \ \ \ \ \ \ \ tempo\ is\ 90\ BPM.\n
comment10.params=songTitle
comment10.target=void\ setTitle(java.lang.String)
comment10.text=\n\ Sets\ a\ title\ for\ the\ song.\ Songs\ do\ not\ have\ to\ have\ titles.\n\ \n\ @param\ \ \ songTitle\ \ \ the\ new\ name\ for\ the\ song\n
comment11.params=
comment11.target=java.lang.String\ getTitle()
comment11.text=\n\ Retrieves\ the\ song's\ title.\n\ \n\ @return\ \ the\ String\ form\ of\ the\ song's\ title\ -\ if\ the\ song\ is\ unnamed,\n\ \ \ \ \ \ \ \ \ \ an\ empty\ String\ will\ be\ returned\n
comment12.params=
comment12.target=int\ getMeasureCount()
comment12.text=\n\ Returns\ the\ current\ length\ of\ the\ song,\ otherwise\ known\ as\ the\n\ number\ of\ measures\ in\ the\ song.\n\ \n\ @return\ \ the\ length\ of\ the\ song\n
comment13.params=
comment13.target=int\ getCurrentMeasure()
comment13.text=\n\ Returns\ the\ measure\ which\ is\ currently\ being\ displayed\ to\ the\ user.\n\ (If\ not\ explicitly\ set,\ this\ defaults\ to\ the\ last\ measure\ in\ the\ song.)\n\ \n\ @return\ \ the\ measure\ number\ of\ the\ measure\ being\ displayed\n
comment14.params=selectedMeasure
comment14.target=void\ setCurrentMeasure(int)
comment14.text=\n\ Sets\ the\ variable\ currentMeasure\ so\ that\ the\ user\ can\ edit\ a\n\ measure\ of\ their\ choice.\n\ \n\ @param\ \ \ selectedMeasure\ \ \ \ \ the\ measure\ the\ user\ wants\ to\ edit\n\ @precondition\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ selectedMeasure\ <\ song's\ measure\ count\n
comment15.params=
comment15.target=java.lang.String\ songToText()
comment15.text=\n\ Converts\ the\ whole\ song\ to\ a\ String\ format.\ The\ String\ will\ be\ in\ the\ format\:\n\ <Measure\ number>(Rhythmic\ beat\ of\ the\ measure)[notes\ inside\ chord\ at\ given\ beat].\n\ \n\ @return\ \ String\ format\ of\ the\ song\n
comment16.params=
comment16.target=void\ printStatistics()
comment16.text=\n\ Prints\ out\ information\ about\ the\ song,\ including\ the\ title,\ the\ tempo,\ and\ \n\ the\ number\ of\ measures\ in\ the\ song.\n
comment2.params=newTempo
comment2.target=void\ setTempo(int)
comment2.text=\n\ Changes\ the\ tempo\ of\ the\ song.\n\ \n\ @param\ \ \ newTempo\ \ \ \ the\ new\ tempo\ to\ play\ the\ song\ at\n
comment3.params=
comment3.target=void\ addMeasure()
comment3.text=\n\ Adds\ one\ measure\ to\ the\ end\ of\ the\ song.\ Displays\ the\ measure\ that\ was\ just\ added.\n
comment4.params=measurePosition
comment4.target=void\ addMeasure(int)
comment4.text=\n\ Adds\ one\ measure\ to\ the\ middle\ of\ the\ song.\ Displays\ the\ measure\ that\ was\ just\ added.\n\ \n\ @param\ \ \ measurePosition\ \ \ \ \ the\ position\ number\ the\ new\ measure\ will\ assume.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Measure\ numbers\ start\ at\ 0.\ To\ add\ a\ new\ first\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ measure,\ measurePosition\ would\ equal\ 0.\n
comment5.params=measureNumber
comment5.target=Measure\ getMeasure(int)
comment5.text=\n\ Retrieves\ a\ measure\ of\ the\ song.\n\ \n\ @param\ \ \ measureNumber\ \ \ the\ index\ of\ the\ measure\ to\ be\ retrieved\n\ @return\ \ the\ measure\ at\ measureNumber\n
comment6.params=measureNumber
comment6.target=void\ removeMeasure(int)
comment6.text=\n\ Removes\ one\ measure\ from\ the\ song.\n\ \n\ @param\ \ \ measureNumber\ \ \ the\ index\ of\ the\ measure\ to\ be\ removed\n
comment7.params=
comment7.target=void\ playSong()
comment7.text=\n\ Plays\ through\ the\ whole\ song.\n
comment8.params=start
comment8.target=void\ playSong(int)
comment8.text=\n\ Plays\ through\ the\ song\ from\ measure\ start\ to\ the\ end\ of\ the\ song.\n\ \n\ @param\ \ \ start\ \ \ the\ measure\ to\ start\ playback\ from\n\ @precondition\ \ \ \ 1\ \u2264\ start\ \u2264\ last\ measure\n
comment9.params=vstName
comment9.target=void\ playSongWithVST(java.lang.String)
comment9.text=\n\ Plays\ through\ the\ whole\ song\ (using\ a\ different\ sound\ font\ from\n\ the\ default\ music\ box\ note).\n\ \n\ @param\ \ \ vstName\ \ \ \ \ the\ designated\ name\ for\ the\ vst,\ which\ becomes\ a\ suffix\ in\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ audio\ file\ name\n
numComments=17
